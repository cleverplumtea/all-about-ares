[{"/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/index.js":"1","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/App.js":"2","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/Landing.js":"3","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/theme.js":"4","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/MarsInfoEmbed.js":"5","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/NavBar.js":"6","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/Images.js":"7","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/MarsInfo3.js":"8","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/MarsInfo.js":"9","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/ThreedMars.js":"10"},{"size":432,"mtime":1611416993147,"results":"11","hashOfConfig":"12"},{"size":1163,"mtime":1611538140374,"results":"13","hashOfConfig":"12"},{"size":2243,"mtime":1611611917816,"results":"14","hashOfConfig":"12"},{"size":1037,"mtime":1611508522545,"results":"15","hashOfConfig":"12"},{"size":1072,"mtime":1611511677888,"results":"16","hashOfConfig":"12"},{"size":1902,"mtime":1611593386389,"results":"17","hashOfConfig":"12"},{"size":3823,"mtime":1611594606827,"results":"18","hashOfConfig":"12"},{"size":3555,"mtime":1611600054322,"results":"19","hashOfConfig":"12"},{"size":616,"mtime":1611460639967,"results":"20","hashOfConfig":"12"},{"size":2517,"mtime":1611543667675,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"y4egdu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/index.js",[],["49","50"],"/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/App.js",[],"/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/Landing.js",["51","52"],"/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/theme.js",[],"/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/MarsInfoEmbed.js",["53","54","55","56"],"import React from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport weatherday from \"../assets/weatherday.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    //     height: \"100vh\",\n    width: \"100vw\",\n  },\n}));\n\nconst MarsInfoEmbed = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: \"-7.5em\" }}\n    >\n      <iframe\n        src=\"https://mars.nasa.gov/layout/embed/image/mslweather/\"\n        title=\"curiosity\"\n        style={{}}\n        width=\"100%\"\n        height=\"645\"\n        scrolling=\"no\"\n        frameborder=\"0\"\n      ></iframe>\n      <iframe\n        src=\"https://mars.nasa.gov/layout/embed/image/insightweather/\"\n        title=\"elysium\"\n        width=\"100%\"\n        height=\"720\"\n        scrolling=\"no\"\n        frameborder=\"0\"\n      ></iframe>\n    </Grid>\n  );\n};\n\nexport default MarsInfoEmbed;\n","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/NavBar.js",["57","58"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\n\nimport logo from \"../assets/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarMargin: {\n    ...theme.mixins.toolbar,\n    marginBottom: \"4em\",\n  },\n  appbar: {\n    backgroundColor: \"transparent\",\n    height: \"5em\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"none\",\n  },\n  logo: {\n    height: \"3em\",\n  },\n  tab: {\n    marginLeft: \"2em\",\n    marginRight: \"2em\",\n    color: \"#000000\",\n    fontFamily: \"Montserrat\",\n    fontWeight: 700,\n    letterSpacing: 2,\n  },\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <AppBar className={classes.appbar}>\n        <Grid alignItems=\"center\" justify=\"center\">\n          <Toolbar>\n            <Tabs>\n              <Tab\n                component={Link}\n                to=\"/marsinfoembed\"\n                label=\"WEATHER\"\n                className={classes.tab}\n              />\n              <Button component={Link} to=\"/\" disableRipple>\n                <img src={logo} alt=\"mars text\" className={classes.logo} />\n              </Button>\n              <Tab\n                component={Link}\n                to=\"/marsphotos\"\n                label=\"PHOTOS\"\n                className={classes.tab}\n              />\n            </Tabs>\n          </Toolbar>\n        </Grid>\n      </AppBar>\n      <div className={classes.toolbarMargin} />\n    </React.Fragment>\n  );\n};\n\nexport default NavBar;\n","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/Images.js",["59"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport spinner from \"../assets/spinner.gif\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    //     backgroundImage: `url(${lines})`,\n    //     backgroundPosition: \"bottom\",\n    //     backgroundSize: \"cover\",\n    //     backgroundRepeat: \"no-reapeat\",\n    height: \"100vh\",\n    marginTop: \"-2em\",\n    //     marginTop: \".5em\",\n  },\n  textField: {\n    height: \"4em\",\n    borderWidth: 6,\n    textAlign: \"center\",\n    fontFamily: \"Montserrat\",\n    letterSpacing: 2,\n  },\n  cameraText: {\n    width: \"50%\",\n  },\n}));\n\nconst sols = () => {\n  let utcLanding = 1344230220000;\n  let oneSol = 88775.244;\n  let currentSols = (Date.now() - utcLanding) / 1000 / oneSol;\n  return Math.ceil(currentSols);\n};\n\nconst solsToEarthDate = (sols) => {\n  let utcLanding = 1344230220000;\n  let oneSol = 88775244;\n  let earthDate = utcLanding + sols * oneSol;\n\n  return new Date(earthDate).toUTCString().slice(5, 16);\n};\n\nconst Images = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [count, setCount] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [date, setDate] = useState(sols() - 2);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const request = async () => {\n      let res = await axios(\n        `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=${date}&api_key=vDaQJdr6dgXmGczRScqjafQlSg81cOYbvmqv8839`\n      );\n      if (res.data.photos.length > 0) {\n        if (count > res.data.photos.length - 1) {\n          setCount(0);\n        } else {\n          setImage(res.data.photos[count]);\n        }\n        console.log(res.data.photos[count]);\n      } else setImage(null);\n      setLoading(true);\n\n      // console.log(res.data.photos[0].img_src);\n    };\n    request();\n  }, [date, count]);\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        className={classes.container}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justifyItems=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography\n            variant=\"body1\"\n            style={{\n              marginBottom: \"1em\",\n              textAlign: \"center\",\n            }}\n          >\n            THE SOLS OF MARS\n            <br></br>\n          </Typography>\n          <Typography variant=\"body2\" style={{ marginBottom: \"1em\" }}>\n            SOL 0 : {solsToEarthDate(0)}\n          </Typography>\n          <Typography variant=\"body2\" style={{ marginBottom: \"1em\" }}>\n            SOL {sols()} : Today\n          </Typography>\n          <form style={{ marginTop: \"1em\", marginBottom: \".5em\" }}>\n            <input\n              value={date}\n              onChange={(e) => setDate(e.target.value)}\n              placeholder=\"SEARCH\"\n              className={classes.textField}\n            />\n          </form>\n          <Typography\n            variant=\"body2\"\n            style={{ marginBottom: \"2em\", marginTop: \"1em\", fontSize: \".8em\" }}\n          >\n            {image && image.camera.full_name} | Earth Date:\n            {solsToEarthDate(date)}\n          </Typography>\n        </Grid>\n        {image ? (\n          <img\n            onClick={() => setCount(count + 1)}\n            src={image.img_src}\n            alt=\"rover from mars\"\n            style={{ height: \"60vh\" }}\n          />\n        ) : (\n          \"No Photos Are Available for that Martian Sol\"\n        )}\n        {loading ? <img src={spinner} alt=\"loading\" /> : <div></div>}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Images;\n","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/MarsInfo3.js",["60","61"],"import React, { useEffect, useRef } from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport lanscape from \"../assets/original.jpg\";\n\nimport { gsap, TimelineLite, Power3 } from \"gsap\";\nimport { TextPlugin } from \"gsap/TextPlugin\";\ngsap.registerPlugin(TextPlugin);\n\nconst dummyData = [\n  { sol: \"SOL 30001\", date: \"JAN.14.21\", high: \"9F\", low: \"9F\" },\n  { sol: \"SOL 30002\", date: \"JAN.15.21\", high: \"9F\", low: \"9F\" },\n  { sol: \"SOL 30003\", date: \"JAN.16.21\", high: \"9F\", low: \"9F\" },\n  { sol: \"SOL 30004\", date: \"JAN.17.21\", high: \"9F\", low: \"9F\" },\n  { sol: \"SOL 30005\", date: \"JAN.18.21\", high: \"9F\", low: \"9F\" },\n  { sol: \"SOL 30006\", date: \"JAN.19.21\", high: \"9F\", low: \"9F\" },\n  { sol: \"SOL 30007\", date: \"JAN.20.21\", high: \"9F\", low: \"9F\" },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    //     backgroundImage: `url(${curiosty})`,\n    //     backgroundPosition: \"center\",\n    //     backgroundSize: \"cover\",\n    //     backgroundRepeat: \"no-reapeat\",\n    //     height: \"100vh\",\n    position: \"absolute\",\n    zIndex: \"2\",\n  },\n  headerText: {\n    marginTop: \".5em\",\n    color: \"#fff\",\n    fontSize: \"2em\",\n    width: \"29em\",\n  },\n  infoBox: {\n    width: \"9em\",\n    height: \"9.8em\",\n    backgroundColor: \"#000\",\n    //     opacity: \".3\",\n    marginLeft: \"5em\",\n    marginTop: \"-13em\",\n  },\n}));\n\nconst MarsInfo3 = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let bgImg = useRef(null);\n  let textP1 = useRef(null);\n  let textP2 = useRef(null);\n  let tl = new TimelineLite();\n\n  useEffect(() => {\n    gsap.to(bgImg, {\n      duration: 7,\n      scale: 1.5,\n      ease: Power3.easeInOut,\n      yoyo: true,\n      repeat: -1,\n    });\n    tl.to(textP1, {\n      delay: 1,\n      duration: 4,\n      text: \"WHERE CURIOSITY LANDED ON APRIL AUGUST 6TH, 2012\",\n      //  ease: Power3.easeInOut,\n    });\n    tl.to(textP2, {\n      //  delay: 1,\n      duration: 4,\n      text:\n        \" CURIOSITY WAS BUILT TO ROVE FOR 90 DAYS. THOUGH, IT IS STILL IN OPERATION TODAY\",\n      //  ease: Power3.easeInOut,\n    });\n  });\n\n  return (\n    <Grid\n      container\n      style={{ marginTop: \"-7.5em\" }}\n      className={classes.container}\n    >\n      <Grid\n        item\n        container\n        direction=\"column\"\n        style={{ marginTop: \"20em\", marginLeft: \"10em\" }}\n      >\n        <Typography style={{ color: \"#fff\" }}>\n          A MARS SOL IS 24 HOURS, 39 MINUTES LONG\n        </Typography>\n        <Typography variant=\"h1\" className={classes.headerText}>\n          YOU ARE ON THE GALE CRATER\n        </Typography>\n        <Typography\n          ref={(el) => (textP1 = el)}\n          variant=\"body1\"\n          className={classes.headerText}\n          style={{ fontSize: \".8em\", marginTop: \"3em\" }}\n        ></Typography>\n        <Typography\n          ref={(el) => (textP2 = el)}\n          variant=\"body1\"\n          className={classes.headerText}\n          style={{ fontSize: \".8em\", marginTop: \"3em\" }}\n        ></Typography>\n      </Grid>\n      <Grid\n        container\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"0em\",\n          position: \"absolute\",\n          overflow: \"hidden\",\n          zIndex: \"-1\",\n        }}\n      >\n        <img\n          ref={(el) => (bgImg = el)}\n          src={lanscape}\n          alt=\"mars dirt\"\n          style={{ width: \"100%\", height: \"100vh\" }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MarsInfo3;\n","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/MarsInfo.js",["62","63"],"import React from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport weatherday from \"../assets/weatherday.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  bg: {\n    //     height: \"100vh\",\n    width: \"100vw\",\n  },\n}));\n\nconst MarsInfo = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Grid style={{ marginTop: \"-20em\" }}>\n      <img className={classes.bg} src={weatherday} alt=\"mars weather info\" />\n    </Grid>\n  );\n};\n\nexport default MarsInfo;\n","/Users/lindseypak/Desktop/seniorPhase/stackathon/marscode2/src/components/ThreedMars.js",["64","65","66","67"],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, extend, useThree } from \"react-three-fiber\";\nimport { useSpring, a } from \"react-spring/three\";\n\nimport \"./style.css\";\n\nextend({ OrbitControls });\n\nconst SpaceShip = () => {\n  const [model, setModel] = useState();\n\n  useEffect(() => {\n    new GLTFLoader().load(\"/scene.gltf\", setModel);\n  });\n\n  return model ? <primitive object={model.scene} /> : null;\n};\n\nconst Controls = () => {\n  const orbitRef = useRef();\n  const { camera, gl } = useThree();\n\n  //   useRender(() => {\n  //     orbitRef.current.update();\n  //   });\n\n  return (\n    <orbitControls\n      autoRotate\n      maxPolarAngle={Math.PI / 3}\n      minPolarAngle={Math.PI / 3}\n      args={[camera, gl.domElement]}\n      ref={orbitRef}\n    />\n  );\n};\n\nconst Plane = () => (\n  <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, -0.5, 0]} receiveShadow>\n    <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n    <meshPhysicalMaterial attach=\"material\" color=\"white\" />\n  </mesh>\n);\n\nconst Box = () => {\n  const [hovered, setHovered] = useState(false);\n  const [active, setActive] = useState(false);\n  const props = useSpring({\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    color: hovered ? \"hotpink\" : \"gray\",\n  });\n\n  return (\n    <a.mesh\n      onPointerOver={() => setHovered(true)}\n      onPointerOut={() => setHovered(false)}\n      onClick={() => setActive(!active)}\n      scale={props.scale}\n      castShadow\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <a.meshPhysicalMaterial attach=\"material\" color={props.color} />\n    </a.mesh>\n  );\n};\n\nconst ThreedMars = () => {\n  const isBrowser = typeof window !== \"undefined\";\n\n  return (\n    <>\n      {isBrowser && (\n        <Canvas\n          camera={{ position: [0, 5, 5] }}\n          className=\"canvas\"\n          // onCreated={({ gl }) => {\n          //   gl.shadowMap.enabled = true\n          //   gl.shadowMap.type = THREE.PCFSoftShadowMap\n          // }}\n        >\n          <ambientLight intensity={2} />\n          <spotLight position={[15, 20, 5]} penumbra={1} castShadow />\n          <fog attach=\"fog\" args={[\"black\", 10, 25]} />\n          <Controls />\n          {/* <Box /> */}\n          {/* <Plane /> */}\n          <SpaceShip />\n        </Canvas>\n      )}\n    </>\n  );\n};\n\nexport default ThreedMars;\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":50,"column":9,"nodeType":"74","messageId":"75","endLine":50,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":51,"column":9,"nodeType":"74","messageId":"75","endLine":51,"endColumn":18},{"ruleId":"72","severity":1,"message":"77","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":18},{"ruleId":"72","severity":1,"message":"78","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":18},{"ruleId":"72","severity":1,"message":"79","line":17,"column":9,"nodeType":"74","messageId":"75","endLine":17,"endColumn":16},{"ruleId":"72","severity":1,"message":"80","line":18,"column":9,"nodeType":"74","messageId":"75","endLine":18,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":18},{"ruleId":"72","severity":1,"message":"80","line":42,"column":9,"nodeType":"74","messageId":"75","endLine":42,"endColumn":14},{"ruleId":"72","severity":1,"message":"80","line":48,"column":9,"nodeType":"74","messageId":"75","endLine":48,"endColumn":14},{"ruleId":"72","severity":1,"message":"81","line":13,"column":7,"nodeType":"74","messageId":"75","endLine":13,"endColumn":16},{"ruleId":"72","severity":1,"message":"80","line":51,"column":9,"nodeType":"74","messageId":"75","endLine":51,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":18},{"ruleId":"72","severity":1,"message":"80","line":18,"column":9,"nodeType":"74","messageId":"75","endLine":18,"endColumn":14},{"ruleId":"72","severity":1,"message":"82","line":2,"column":13,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":15,"column":3,"nodeType":"74","endLine":15,"endColumn":12,"suggestions":"85"},{"ruleId":"72","severity":1,"message":"86","line":41,"column":7,"nodeType":"74","messageId":"75","endLine":41,"endColumn":12},{"ruleId":"72","severity":1,"message":"87","line":48,"column":7,"nodeType":"74","messageId":"75","endLine":48,"endColumn":10},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'matchesMD' is assigned a value but never used.","Identifier","unusedVar","'matchesSM' is assigned a value but never used.","'Typography' is defined but never used.","'weatherday' is defined but never used.","'classes' is assigned a value but never used.","'theme' is assigned a value but never used.","'dummyData' is assigned a value but never used.","'THREE' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setModel'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["90"],"'Plane' is assigned a value but never used.","'Box' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Add dependencies array: []",{"range":"93","text":"94"},[542,542],", []"]